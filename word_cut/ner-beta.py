import codecs
import re
import time
import regex

def read_data():
    with codecs.open("data/Province.txt",'r',encoding='utf-8') as data_province:
        province = data_province.read()
        data_province.close()
        province = province.split('\n')
        #print(province)
    
    return province
    """
    with codecs.open("data/Countrysmall.txt",'r',encoding='utf-8') as data_country:
        country = data_country.read()
        data_country.close()
        print(country)
    """

def regex_time(read_text):
    #regex_time = r"([0-1][\d]|[2][0-4])\s?(:|.)([0-5][\d])\s?(นาฬิกา|น.|น)|(ช่วง|ตอน)(เช้า|ค่ำ|เย็น|ดึก|บ่าย|สาย)"
    regex_time = r"(([0-1][\d]|[2][0-4])\s?(:|.)([0-5][\d])\s?(นาฬิกา|น.|น)|(ช่วง|ตอน)(เช้า|ค่ำ|เย็น|ดึก|บ่าย|สาย))"
    matches_time = regex.sub(regex_time, r'<time>\1</time>', read_text)
    return matches_time

def regex_date(read_text):
    regex_date = (r"(([1-9]|[0-2][\d]|[3][0-1])\s?(/|-)?(ม\.ค\.|มกราคม|มกรา|ก\.พ\.|กุมภาพันธ์|กุมภา|มี\.ค\.|"
    "มีนาคม|มีนา|เม\.ย\.|เมษายน|เมษา|พ\.ค\.|พฤษภาคม|พฤษภา|มิ\.ย\.|มิถุนายน|มิถุนา|ก\.ค\.|กรกฎาคม|กรกฎา|ส\.ค\.|"
    "สิงหาคม|สิงหา|ก\.ย\.|กันยายน|กันยา|ต\.ค\.|ตุลาคม|ตุลา|พ\.ย\.|พฤศจิกายน|พฤศจิกา|ธ\.ค\.|ธันวาคม|ธันวาคม)\s?(/|-)?"
    "(พ.ศ.|ค.ศ.|พศ|คศ)?\s?(\d\d\d\d|\d\d)?|([1-9]|[0-2][\d]|[3][0-1])\s?(/|-|.)([0][\d]|[1][0-2])\s?(/|-|.)(\d\d\d\d|\d\d))")
    matches_date = regex.sub(regex_date, r'<date>\1</date>', read_text)
    #print(matches_date)
    return matches_date

def regex_name(read_text):
    name1 = "((?!นายอำเภอ|นายจ้าง|นายทุน|นายยก|นายช่วย|นายทุน|นายพราน|นายตรวจ|นางเอก|นายรอง|นายหน้า|นายตำรวจ|ทนายความ|ดร\.หนุ่ม|ส\.ต\. มา|นายกรัฐมนตรี))"
    name2 = ("(นาย|นาง|นางสาว|น\.ส\.|นพ\.|ส\.ต\.|ร\.ต\.|ดร\.|ร\.อ\.|พ\.อ\.|ส\.ต\.ท\.|นายแพทย์|แพทย์หญิง|พญ\.|"
        "ทันตแพทย์|ทพ\.|ทนาย|รองศาสตราจารย์|ผู้ช่วยศาสตราจารย์|พล\.อ\.ต\.|พลอากาศตรี|พล\.อ\.ท\.|พลอากาศโท|พล\.อ\.อ\.|"
        "พลอากาศเอก|พล\.อ\.|พลเอก|พล\.ท\.|พลโท|พลตรี|พล\.ต\.อ\.|พลตำรวจเอก|พลตำรวจโท|พล\.ต\.ท\.|พลตำรวจตรี|"
        "พล\.ต\.ต\.|พ\.ต\.อ\.|พันตำรวจเอก|พันตำรวจโท|พ\.ต\.ท\.|พันตำรวจตรี|พ\.ต\.ต\.|ร\.ต\.อ\.|ร้อยตำรวจเอก|"
        "ร้อยตำรวจโท|ร\.ต\.ท\.|ร้อยตำรวจตรี|ร\.ต\.ต\.|พล\.ต\.|ส\.ต\.)\s?")
    name3 = ("([ก-๙]{2,14}(?=นามสมมุติ|เบื้อง|เพิ่ง|เพื่อ|เริ่ม|อ้าง|หรือ|นั้น|ได้เข้าไป|ด้วย|อายุ|นั่ง|ปั่น|ช่วย|จริง|เล่า|สามี|กลับ|คิด|และ|หาย|เผย|ขณะ|"
        "จ่อ|ที่|ถูก|พี่|ใช้|ไม่|เอา|บอก|ผู้|กล่|ออก|ถึง|เคย|ถือ|ที่|พา|ใน|มา|ก็|ฯ|ให้|ดู|ได้|จน|จึง)|([ก-๙]{2,14}))")
    name4 = ("(\s((?!รับสารภาพ|เสียชิวิต|นามสมมุติ|หลานสาว|ชาวสเปน|เจ้าของ|พบอาวุธ|สัญชาติ|ยังเล่า|ยังคง|ลูกชาย|เข้าดำ|สารภาพ|"
        "มือปืน|กำลัง|กล่าว|คนงาน|เล่า|ทราบ|อายุ|จริง|หรือ|เปิด|อ้าง|เป็น|นั้น|เผย|ถูก|และ|ใช้|ยอม|จาก|ผู้|จู่|ส่ง|มา|ไม่|ก็|ไป|ดู|ได้|"
        "มีหมาย|จึง|แอบ|ให้|พี่|ซึ่ง|น่าจะ|ภรรยา|โดย|มีโรค|ก่อนจะ|ระบุ|เมื่อ|จะ)[ก-๙]{2,14}))?")
    
    regex_name = (r"(((?!นายอำเภอ|นายจ้าง|นายทุน|นายยก|นายช่วย|นายทุน|นายพราน|นายตรวจ|นางเอก|นายรอง|นายหน้า|นายตำรวจ|ทนายความ|ดร\.หนุ่ม|ส\.ต\. มา|นายกรัฐมนตรี))"
    "(นาย|นาง|นางสาว|น\.ส\.|นพ\.|ส\.ต\.|ร\.ต\.|ดร\.|ร\.อ\.|พ\.อ\.|ส\.ต\.ท\.|นายแพทย์|แพทย์หญิง|พญ\.|"
    "ทันตแพทย์|ทพ\.|ทนาย|รองศาสตราจารย์|ผู้ช่วยศาสตราจารย์|พล\.อ\.ต\.|พลอากาศตรี|พล\.อ\.ท\.|พลอากาศโท|พล\.อ\.อ\.|"
    "พลอากาศเอก|พล\.อ\.|พลเอก|พล\.ท\.|พลโท|พลตรี|พล\.ต\.อ\.|พลตำรวจเอก|พลตำรวจโท|พล\.ต\.ท\.|พลตำรวจตรี|"
    "พล\.ต\.ต\.|พ\.ต\.อ\.|พันตำรวจเอก|พันตำรวจโท|พ\.ต\.ท\.|พันตำรวจตรี|พ\.ต\.ต\.|ร\.ต\.อ\.|ร้อยตำรวจเอก|"
    "ร้อยตำรวจโท|ร\.ต\.ท\.|ร้อยตำรวจตรี|ร\.ต\.ต\.|พล\.ต\.|ส\.ต\.)\s?"
    "([ก-๙]{2,14}(?=นามสมมุติ|เบื้อง|เพิ่ง|เพื่อ|เริ่ม|อ้าง|หรือ|นั้น|ได้เข้าไป|ด้วย|อายุ|นั่ง|ปั่น|ช่วย|จริง|เล่า|สามี|กลับ|คิด|และ|หาย|เผย|ขณะ|"
    "จ่อ|ที่|ถูก|พี่|ใช้|ไม่|เอา|บอก|ผู้|กล่|ออก|ถึง|เคย|ถือ|ที่|พา|ใน|มา|ก็|ฯ|ให้|ดู|ได้|จน|จึง)|([ก-๙]{2,14}))"
    "(\s((?!รับสารภาพ|เสียชิวิต|นามสมมุติ|หลานสาว|ชาวสเปน|เจ้าของ|พบอาวุธ|สัญชาติ|ยังเล่า|ยังคง|ลูกชาย|เข้าดำ|สารภาพ|"
    "มือปืน|กำลัง|กล่าว|คนงาน|เล่า|ทราบ|อายุ|จริง|หรือ|เปิด|อ้าง|เป็น|นั้น|เผย|ถูก|และ|ใช้|ยอม|จาก|ผู้|จู่|ส่ง|มา|ไม่|ก็|ไป|ดู|ได้|"
    "มีหมาย|จึง|แอบ|ให้|พี่|ซึ่ง|น่าจะ|ภรรยา|โดย|มีโรค|ก่อนจะ|ระบุ|เมื่อ|จะ)[ก-๙]{2,14}))?)")
    #https://regex101.com/r/9Qx8gT/1
    #regex_name = name1+name2+name3+name4
    #print(regex_na)

    matches_name = regex.sub(regex_name, r'<name>\2\4\5\6</name>', read_text)
    return matches_name
    
def regex_province(read_text):
    province = read_data()
    #print(type(province))
    #print(province)
    text = 'ที่อยู่จ.สมุทรปรากาน มีผลทำให้เกิด จ.สมุทรปราการ'
    regex_province = r"(จ\.|จังหวัด|จว.)\s?"
    matches_province = regex.sub('((จ\.|จังหวัด|จว.)\s?(\L<options>){e<=1})', r'<fail>\1</fail>', text, options=province)
    print(matches_province)
    matches_province = regex.sub('<fail>((จ\.|จังหวัด|จว.)\s?(\L<options>))</fail>', r'<province>\1</province>', matches_province, options=province)
    print(matches_province)
    

    #matches_province_fi = regex.finditer('(จ\.|จังหวัด|จว.)\s?(\L<options>)', text, re.MULTILINE,options=province)
    #matches_province2_fi = regex.finditer('(จ\.|จังหวัด|จว.)\s?(\L<options>){e<=1}', text, re.MULTILINE,options=province)
    """
    for matchNum, match in enumerate(matches_province_fi):
        print (str('สถานที่ (จัวหวัด) ถูกต้อง : ')+match.group(2))
    for matchNum, match in enumerate(matches_province2_fi):
        print (str('สถานที่ (จัวหวัด) ถูกต้อง : ')+match.group(2))
    """
    #https://regex101.com/r/9Qx8gT/2


#read_data()
read_text = ''

#result_time = regex_time(read_text)
#result_date = regex_date(result_time)
#result_name = regex_name(result_date)

regex_province(read_text)
#print(result_name)
